// <auto-generated />
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20240428191031_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("CourseLength")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonCount")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseLength = 15,
                            Description = "Learn the basics of programming in Java. Topics include variables, datatypes, conditional statements, loops, and functions.",
                            Image = "introduction-to-java.jpg",
                            LessonCount = 25,
                            Level = "Beginner",
                            TeacherId = 1,
                            Title = "Introduction to Java"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseLength = 16,
                            Description = "Learn how to query and build relational databases. This course is taught in SQL using SQL Server Management Server 19.",
                            Image = "database-development.jpg",
                            LessonCount = 31,
                            Level = "Beginner",
                            TeacherId = 1,
                            Title = "Database Development"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseLength = 25,
                            Description = "Learn advanced techniques for creating machine learning algorithms.",
                            Image = "advanced-machine-learning.jpg",
                            LessonCount = 47,
                            Level = "Advanced",
                            TeacherId = 2,
                            Title = "Advanced Machine Learning"
                        },
                        new
                        {
                            CourseId = 4,
                            CourseLength = 12,
                            Description = "Build your own webpages in React! Suitable for beginners.",
                            Image = "react-basics.jpg",
                            LessonCount = 19,
                            Level = "Intermediate",
                            TeacherId = 2,
                            Title = "React Basics"
                        },
                        new
                        {
                            CourseId = 5,
                            CourseLength = 18,
                            Description = "Learn how to develop web apps with ASP.Net Core. Basic knowledge of HTML and CSS required.",
                            Image = "asp-net-core-web-development.jpg",
                            LessonCount = 29,
                            Level = "Advanced",
                            TeacherId = 2,
                            Title = "Asp.Net Core Web Development"
                        },
                        new
                        {
                            CourseId = 6,
                            CourseLength = 8,
                            Description = "Learn the basics of web development with HTML and CSS.",
                            Image = "html-and-css.jpg",
                            LessonCount = 16,
                            Level = "beginner",
                            TeacherId = 2,
                            Title = "HTML and CSS"
                        },
                        new
                        {
                            CourseId = 7,
                            CourseLength = 15,
                            Description = "Learn advanced development techniques in C#. Focuses on the use of classes and object-oriented programming.",
                            Image = "intermediate-csharp.jpg",
                            LessonCount = 26,
                            Level = "Intermediate",
                            TeacherId = 3,
                            Title = "Intermediate C#"
                        },
                        new
                        {
                            CourseId = 8,
                            CourseLength = 13,
                            Description = "Learn advanced web design techniques to plan our your website to be effective and engaging.",
                            Image = "advanced-web-design.jpg",
                            LessonCount = 22,
                            Level = "Advanced",
                            TeacherId = 3,
                            Title = "Advanced Web Design"
                        },
                        new
                        {
                            CourseId = 9,
                            CourseLength = 11,
                            Description = "Learn rudimentary Php as used in web development. No prior programming knowledge required.",
                            Image = "introduction-to-php.jpg",
                            LessonCount = 17,
                            Level = "Beginner",
                            TeacherId = 4,
                            Title = "Introduction to Php"
                        },
                        new
                        {
                            CourseId = 10,
                            CourseLength = 23,
                            Description = "Learn common programming data structures and algorithms in Java. Topics include search trees, graphs, stacks, lists, and queues.",
                            Image = "data-structures-and-algorithms.jpg",
                            LessonCount = 37,
                            Level = "Intermediate",
                            TeacherId = 4,
                            Title = "Data Structures and Algorithms"
                        },
                        new
                        {
                            CourseId = 11,
                            CourseLength = 6,
                            Description = "Learn how to use Bootstrap to elevate your web development. Prior HTML and CSS knowledge required.",
                            Image = "bootstrap.png",
                            LessonCount = 13,
                            Level = "Intermediate",
                            TeacherId = 5,
                            Title = "Bootstrap"
                        },
                        new
                        {
                            CourseId = 12,
                            CourseLength = 19,
                            Description = "Learn intermediate web backend development techniques in Python.",
                            Image = "intermediate-django.jpg",
                            LessonCount = 38,
                            Level = "Intermediate",
                            TeacherId = 6,
                            Title = "Intermediate Django"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            FirstName = "Sasha",
                            LastName = "Cheek"
                        },
                        new
                        {
                            TeacherId = 2,
                            FirstName = "Jenna",
                            LastName = "Hillman"
                        },
                        new
                        {
                            TeacherId = 3,
                            FirstName = "Bryson",
                            LastName = "Keightley"
                        },
                        new
                        {
                            TeacherId = 4,
                            FirstName = "Annika",
                            LastName = "Creste"
                        },
                        new
                        {
                            TeacherId = 5,
                            FirstName = "Andrew",
                            LastName = "Brooks"
                        },
                        new
                        {
                            TeacherId = 6,
                            FirstName = "Mark",
                            LastName = "Templeton"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Course", b =>
                {
                    b.HasOne("FinalProject.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("FinalProject.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
